// Copyright 2025 Chaukas AI
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: chaukas/spec/common/v1/events.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventType int32

const (
	EventType_EVENT_TYPE_UNSPECIFIED EventType = 0
	// Session lifecycle
	EventType_EVENT_TYPE_SESSION_START EventType = 1
	EventType_EVENT_TYPE_SESSION_END   EventType = 2
	// Agent spans
	EventType_EVENT_TYPE_AGENT_START   EventType = 10
	EventType_EVENT_TYPE_AGENT_END     EventType = 11
	EventType_EVENT_TYPE_AGENT_HANDOFF EventType = 12
	// LLM/tool spans
	EventType_EVENT_TYPE_MODEL_INVOCATION_START EventType = 20
	EventType_EVENT_TYPE_MODEL_INVOCATION_END   EventType = 21
	EventType_EVENT_TYPE_TOOL_CALL_START        EventType = 22
	EventType_EVENT_TYPE_TOOL_CALL_END          EventType = 23
	EventType_EVENT_TYPE_MCP_CALL_START         EventType = 24
	EventType_EVENT_TYPE_MCP_CALL_END           EventType = 25
	// I/O
	EventType_EVENT_TYPE_INPUT_RECEIVED EventType = 30
	EventType_EVENT_TYPE_OUTPUT_EMITTED EventType = 31
	// Cross-cutting
	EventType_EVENT_TYPE_ERROR EventType = 40
	EventType_EVENT_TYPE_RETRY EventType = 41
	// Optional extension types (x_*)
	EventType_EVENT_TYPE_POLICY_DECISION EventType = 60 // x_POLICY_DECISION
	EventType_EVENT_TYPE_DATA_ACCESS     EventType = 61 // x_DATA_ACCESS (RAG/retrieval)
	EventType_EVENT_TYPE_STATE_UPDATE    EventType = 62
	EventType_EVENT_TYPE_SYSTEM          EventType = 63
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0:  "EVENT_TYPE_UNSPECIFIED",
		1:  "EVENT_TYPE_SESSION_START",
		2:  "EVENT_TYPE_SESSION_END",
		10: "EVENT_TYPE_AGENT_START",
		11: "EVENT_TYPE_AGENT_END",
		12: "EVENT_TYPE_AGENT_HANDOFF",
		20: "EVENT_TYPE_MODEL_INVOCATION_START",
		21: "EVENT_TYPE_MODEL_INVOCATION_END",
		22: "EVENT_TYPE_TOOL_CALL_START",
		23: "EVENT_TYPE_TOOL_CALL_END",
		24: "EVENT_TYPE_MCP_CALL_START",
		25: "EVENT_TYPE_MCP_CALL_END",
		30: "EVENT_TYPE_INPUT_RECEIVED",
		31: "EVENT_TYPE_OUTPUT_EMITTED",
		40: "EVENT_TYPE_ERROR",
		41: "EVENT_TYPE_RETRY",
		60: "EVENT_TYPE_POLICY_DECISION",
		61: "EVENT_TYPE_DATA_ACCESS",
		62: "EVENT_TYPE_STATE_UPDATE",
		63: "EVENT_TYPE_SYSTEM",
	}
	EventType_value = map[string]int32{
		"EVENT_TYPE_UNSPECIFIED":            0,
		"EVENT_TYPE_SESSION_START":          1,
		"EVENT_TYPE_SESSION_END":            2,
		"EVENT_TYPE_AGENT_START":            10,
		"EVENT_TYPE_AGENT_END":              11,
		"EVENT_TYPE_AGENT_HANDOFF":          12,
		"EVENT_TYPE_MODEL_INVOCATION_START": 20,
		"EVENT_TYPE_MODEL_INVOCATION_END":   21,
		"EVENT_TYPE_TOOL_CALL_START":        22,
		"EVENT_TYPE_TOOL_CALL_END":          23,
		"EVENT_TYPE_MCP_CALL_START":         24,
		"EVENT_TYPE_MCP_CALL_END":           25,
		"EVENT_TYPE_INPUT_RECEIVED":         30,
		"EVENT_TYPE_OUTPUT_EMITTED":         31,
		"EVENT_TYPE_ERROR":                  40,
		"EVENT_TYPE_RETRY":                  41,
		"EVENT_TYPE_POLICY_DECISION":        60,
		"EVENT_TYPE_DATA_ACCESS":            61,
		"EVENT_TYPE_STATE_UPDATE":           62,
		"EVENT_TYPE_SYSTEM":                 63,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_chaukas_spec_common_v1_events_proto_enumTypes[0].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_chaukas_spec_common_v1_events_proto_enumTypes[0]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_chaukas_spec_common_v1_events_proto_rawDescGZIP(), []int{0}
}

type EventStatus int32

const (
	EventStatus_EVENT_STATUS_UNSPECIFIED EventStatus = 0
	EventStatus_EVENT_STATUS_STARTED     EventStatus = 1
	EventStatus_EVENT_STATUS_IN_PROGRESS EventStatus = 2
	EventStatus_EVENT_STATUS_COMPLETED   EventStatus = 3
	EventStatus_EVENT_STATUS_FAILED      EventStatus = 4
	EventStatus_EVENT_STATUS_CANCELLED   EventStatus = 5
)

// Enum value maps for EventStatus.
var (
	EventStatus_name = map[int32]string{
		0: "EVENT_STATUS_UNSPECIFIED",
		1: "EVENT_STATUS_STARTED",
		2: "EVENT_STATUS_IN_PROGRESS",
		3: "EVENT_STATUS_COMPLETED",
		4: "EVENT_STATUS_FAILED",
		5: "EVENT_STATUS_CANCELLED",
	}
	EventStatus_value = map[string]int32{
		"EVENT_STATUS_UNSPECIFIED": 0,
		"EVENT_STATUS_STARTED":     1,
		"EVENT_STATUS_IN_PROGRESS": 2,
		"EVENT_STATUS_COMPLETED":   3,
		"EVENT_STATUS_FAILED":      4,
		"EVENT_STATUS_CANCELLED":   5,
	}
)

func (x EventStatus) Enum() *EventStatus {
	p := new(EventStatus)
	*p = x
	return p
}

func (x EventStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_chaukas_spec_common_v1_events_proto_enumTypes[1].Descriptor()
}

func (EventStatus) Type() protoreflect.EnumType {
	return &file_chaukas_spec_common_v1_events_proto_enumTypes[1]
}

func (x EventStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventStatus.Descriptor instead.
func (EventStatus) EnumDescriptor() ([]byte, []int) {
	return file_chaukas_spec_common_v1_events_proto_rawDescGZIP(), []int{1}
}

type Severity int32

const (
	Severity_SEVERITY_UNSPECIFIED Severity = 0
	Severity_SEVERITY_DEBUG       Severity = 1
	Severity_SEVERITY_INFO        Severity = 2
	Severity_SEVERITY_WARN        Severity = 3
	Severity_SEVERITY_ERROR       Severity = 4
)

// Enum value maps for Severity.
var (
	Severity_name = map[int32]string{
		0: "SEVERITY_UNSPECIFIED",
		1: "SEVERITY_DEBUG",
		2: "SEVERITY_INFO",
		3: "SEVERITY_WARN",
		4: "SEVERITY_ERROR",
	}
	Severity_value = map[string]int32{
		"SEVERITY_UNSPECIFIED": 0,
		"SEVERITY_DEBUG":       1,
		"SEVERITY_INFO":        2,
		"SEVERITY_WARN":        3,
		"SEVERITY_ERROR":       4,
	}
)

func (x Severity) Enum() *Severity {
	p := new(Severity)
	*p = x
	return p
}

func (x Severity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Severity) Descriptor() protoreflect.EnumDescriptor {
	return file_chaukas_spec_common_v1_events_proto_enumTypes[2].Descriptor()
}

func (Severity) Type() protoreflect.EnumType {
	return &file_chaukas_spec_common_v1_events_proto_enumTypes[2]
}

func (x Severity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Severity.Descriptor instead.
func (Severity) EnumDescriptor() ([]byte, []int) {
	return file_chaukas_spec_common_v1_events_proto_rawDescGZIP(), []int{2}
}

type Author int32

const (
	Author_AUTHOR_UNSPECIFIED Author = 0
	Author_AUTHOR_USER        Author = 1
	Author_AUTHOR_AGENT       Author = 2
	Author_AUTHOR_TOOL        Author = 3
	Author_AUTHOR_SYSTEM      Author = 4
	Author_AUTHOR_LLM         Author = 5
)

// Enum value maps for Author.
var (
	Author_name = map[int32]string{
		0: "AUTHOR_UNSPECIFIED",
		1: "AUTHOR_USER",
		2: "AUTHOR_AGENT",
		3: "AUTHOR_TOOL",
		4: "AUTHOR_SYSTEM",
		5: "AUTHOR_LLM",
	}
	Author_value = map[string]int32{
		"AUTHOR_UNSPECIFIED": 0,
		"AUTHOR_USER":        1,
		"AUTHOR_AGENT":       2,
		"AUTHOR_TOOL":        3,
		"AUTHOR_SYSTEM":      4,
		"AUTHOR_LLM":         5,
	}
)

func (x Author) Enum() *Author {
	p := new(Author)
	*p = x
	return p
}

func (x Author) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Author) Descriptor() protoreflect.EnumDescriptor {
	return file_chaukas_spec_common_v1_events_proto_enumTypes[3].Descriptor()
}

func (Author) Type() protoreflect.EnumType {
	return &file_chaukas_spec_common_v1_events_proto_enumTypes[3]
}

func (x Author) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Author.Descriptor instead.
func (Author) EnumDescriptor() ([]byte, []int) {
	return file_chaukas_spec_common_v1_events_proto_rawDescGZIP(), []int{3}
}

type MessageContent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Role          string                 `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"` // "user" | "assistant" | "system"
	Text          string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Metadata      *structpb.Struct       `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageContent) Reset() {
	*x = MessageContent{}
	mi := &file_chaukas_spec_common_v1_events_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageContent) ProtoMessage() {}

func (x *MessageContent) ProtoReflect() protoreflect.Message {
	mi := &file_chaukas_spec_common_v1_events_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageContent.ProtoReflect.Descriptor instead.
func (*MessageContent) Descriptor() ([]byte, []int) {
	return file_chaukas_spec_common_v1_events_proto_rawDescGZIP(), []int{0}
}

func (x *MessageContent) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *MessageContent) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *MessageContent) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type ToolCall struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Arguments     *structpb.Struct       `protobuf:"bytes,3,opt,name=arguments,proto3" json:"arguments,omitempty"` // arbitrary JSON args
	AuthRequired  bool                   `protobuf:"varint,4,opt,name=auth_required,json=authRequired,proto3" json:"auth_required,omitempty"`
	FunctionName  string                 `protobuf:"bytes,5,opt,name=function_name,json=functionName,proto3" json:"function_name,omitempty"` // Specific function within the tool
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToolCall) Reset() {
	*x = ToolCall{}
	mi := &file_chaukas_spec_common_v1_events_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToolCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToolCall) ProtoMessage() {}

func (x *ToolCall) ProtoReflect() protoreflect.Message {
	mi := &file_chaukas_spec_common_v1_events_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToolCall.ProtoReflect.Descriptor instead.
func (*ToolCall) Descriptor() ([]byte, []int) {
	return file_chaukas_spec_common_v1_events_proto_rawDescGZIP(), []int{1}
}

func (x *ToolCall) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ToolCall) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ToolCall) GetArguments() *structpb.Struct {
	if x != nil {
		return x.Arguments
	}
	return nil
}

func (x *ToolCall) GetAuthRequired() bool {
	if x != nil {
		return x.AuthRequired
	}
	return false
}

func (x *ToolCall) GetFunctionName() string {
	if x != nil {
		return x.FunctionName
	}
	return ""
}

type ToolResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ToolCallId      string                 `protobuf:"bytes,1,opt,name=tool_call_id,json=toolCallId,proto3" json:"tool_call_id,omitempty"`
	Output          *structpb.Struct       `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"` // arbitrary JSON result
	ErrorMessage    string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	ExecutionTimeMs float64                `protobuf:"fixed64,4,opt,name=execution_time_ms,json=executionTimeMs,proto3" json:"execution_time_ms,omitempty"`
	HttpStatus      int32                  `protobuf:"varint,5,opt,name=http_status,json=httpStatus,proto3" json:"http_status,omitempty"` // if applicable
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ToolResponse) Reset() {
	*x = ToolResponse{}
	mi := &file_chaukas_spec_common_v1_events_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToolResponse) ProtoMessage() {}

func (x *ToolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chaukas_spec_common_v1_events_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToolResponse.ProtoReflect.Descriptor instead.
func (*ToolResponse) Descriptor() ([]byte, []int) {
	return file_chaukas_spec_common_v1_events_proto_rawDescGZIP(), []int{2}
}

func (x *ToolResponse) GetToolCallId() string {
	if x != nil {
		return x.ToolCallId
	}
	return ""
}

func (x *ToolResponse) GetOutput() *structpb.Struct {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *ToolResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ToolResponse) GetExecutionTimeMs() float64 {
	if x != nil {
		return x.ExecutionTimeMs
	}
	return 0
}

func (x *ToolResponse) GetHttpStatus() int32 {
	if x != nil {
		return x.HttpStatus
	}
	return 0
}

type LLMInvocation struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Provider         string                 `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"` // e.g., "openai"
	Model            string                 `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`       // e.g., "gpt-4o-mini"
	Request          *structpb.Struct       `protobuf:"bytes,3,opt,name=request,proto3" json:"request,omitempty"`   // serialized prompt/messages/params
	Response         *structpb.Struct       `protobuf:"bytes,4,opt,name=response,proto3" json:"response,omitempty"` // serialized response
	PromptTokens     int32                  `protobuf:"varint,5,opt,name=prompt_tokens,json=promptTokens,proto3" json:"prompt_tokens,omitempty"`
	CompletionTokens int32                  `protobuf:"varint,6,opt,name=completion_tokens,json=completionTokens,proto3" json:"completion_tokens,omitempty"`
	TotalTokens      int32                  `protobuf:"varint,7,opt,name=total_tokens,json=totalTokens,proto3" json:"total_tokens,omitempty"`
	Temperature      float64                `protobuf:"fixed64,8,opt,name=temperature,proto3" json:"temperature,omitempty"`
	MaxTokens        int32                  `protobuf:"varint,9,opt,name=max_tokens,json=maxTokens,proto3" json:"max_tokens,omitempty"`
	TopP             float64                `protobuf:"fixed64,10,opt,name=top_p,json=topP,proto3" json:"top_p,omitempty"`
	FrequencyPenalty float64                `protobuf:"fixed64,11,opt,name=frequency_penalty,json=frequencyPenalty,proto3" json:"frequency_penalty,omitempty"`
	PresencePenalty  float64                `protobuf:"fixed64,12,opt,name=presence_penalty,json=presencePenalty,proto3" json:"presence_penalty,omitempty"`
	StartTime        *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime          *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	DurationMs       float64                `protobuf:"fixed64,15,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"`
	FinishReason     string                 `protobuf:"bytes,16,opt,name=finish_reason,json=finishReason,proto3" json:"finish_reason,omitempty"` // "stop" | "length" | "safety" | etc.
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *LLMInvocation) Reset() {
	*x = LLMInvocation{}
	mi := &file_chaukas_spec_common_v1_events_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LLMInvocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LLMInvocation) ProtoMessage() {}

func (x *LLMInvocation) ProtoReflect() protoreflect.Message {
	mi := &file_chaukas_spec_common_v1_events_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LLMInvocation.ProtoReflect.Descriptor instead.
func (*LLMInvocation) Descriptor() ([]byte, []int) {
	return file_chaukas_spec_common_v1_events_proto_rawDescGZIP(), []int{3}
}

func (x *LLMInvocation) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *LLMInvocation) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *LLMInvocation) GetRequest() *structpb.Struct {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *LLMInvocation) GetResponse() *structpb.Struct {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *LLMInvocation) GetPromptTokens() int32 {
	if x != nil {
		return x.PromptTokens
	}
	return 0
}

func (x *LLMInvocation) GetCompletionTokens() int32 {
	if x != nil {
		return x.CompletionTokens
	}
	return 0
}

func (x *LLMInvocation) GetTotalTokens() int32 {
	if x != nil {
		return x.TotalTokens
	}
	return 0
}

func (x *LLMInvocation) GetTemperature() float64 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *LLMInvocation) GetMaxTokens() int32 {
	if x != nil {
		return x.MaxTokens
	}
	return 0
}

func (x *LLMInvocation) GetTopP() float64 {
	if x != nil {
		return x.TopP
	}
	return 0
}

func (x *LLMInvocation) GetFrequencyPenalty() float64 {
	if x != nil {
		return x.FrequencyPenalty
	}
	return 0
}

func (x *LLMInvocation) GetPresencePenalty() float64 {
	if x != nil {
		return x.PresencePenalty
	}
	return 0
}

func (x *LLMInvocation) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *LLMInvocation) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *LLMInvocation) GetDurationMs() float64 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

func (x *LLMInvocation) GetFinishReason() string {
	if x != nil {
		return x.FinishReason
	}
	return ""
}

type PolicyDecision struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PolicyId      string                 `protobuf:"bytes,1,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	Outcome       string                 `protobuf:"bytes,2,opt,name=outcome,proto3" json:"outcome,omitempty"` // "allow" | "deny" | "review"
	RuleIds       []string               `protobuf:"bytes,3,rep,name=rule_ids,json=ruleIds,proto3" json:"rule_ids,omitempty"`
	Rationale     string                 `protobuf:"bytes,4,opt,name=rationale,proto3" json:"rationale,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PolicyDecision) Reset() {
	*x = PolicyDecision{}
	mi := &file_chaukas_spec_common_v1_events_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PolicyDecision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyDecision) ProtoMessage() {}

func (x *PolicyDecision) ProtoReflect() protoreflect.Message {
	mi := &file_chaukas_spec_common_v1_events_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyDecision.ProtoReflect.Descriptor instead.
func (*PolicyDecision) Descriptor() ([]byte, []int) {
	return file_chaukas_spec_common_v1_events_proto_rawDescGZIP(), []int{4}
}

func (x *PolicyDecision) GetPolicyId() string {
	if x != nil {
		return x.PolicyId
	}
	return ""
}

func (x *PolicyDecision) GetOutcome() string {
	if x != nil {
		return x.Outcome
	}
	return ""
}

func (x *PolicyDecision) GetRuleIds() []string {
	if x != nil {
		return x.RuleIds
	}
	return nil
}

func (x *PolicyDecision) GetRationale() string {
	if x != nil {
		return x.Rationale
	}
	return ""
}

type DataAccess struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Datasource    string                 `protobuf:"bytes,1,opt,name=datasource,proto3" json:"datasource,omitempty"` // e.g., "vector://products"
	DocumentIds   []string               `protobuf:"bytes,2,rep,name=document_ids,json=documentIds,proto3" json:"document_ids,omitempty"`
	ChunkIds      []string               `protobuf:"bytes,3,rep,name=chunk_ids,json=chunkIds,proto3" json:"chunk_ids,omitempty"`
	PiiCategories []string               `protobuf:"bytes,4,rep,name=pii_categories,json=piiCategories,proto3" json:"pii_categories,omitempty"` // e.g., "EMAIL","PHONE"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataAccess) Reset() {
	*x = DataAccess{}
	mi := &file_chaukas_spec_common_v1_events_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataAccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataAccess) ProtoMessage() {}

func (x *DataAccess) ProtoReflect() protoreflect.Message {
	mi := &file_chaukas_spec_common_v1_events_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataAccess.ProtoReflect.Descriptor instead.
func (*DataAccess) Descriptor() ([]byte, []int) {
	return file_chaukas_spec_common_v1_events_proto_rawDescGZIP(), []int{5}
}

func (x *DataAccess) GetDatasource() string {
	if x != nil {
		return x.Datasource
	}
	return ""
}

func (x *DataAccess) GetDocumentIds() []string {
	if x != nil {
		return x.DocumentIds
	}
	return nil
}

func (x *DataAccess) GetChunkIds() []string {
	if x != nil {
		return x.ChunkIds
	}
	return nil
}

func (x *DataAccess) GetPiiCategories() []string {
	if x != nil {
		return x.PiiCategories
	}
	return nil
}

type RedactionInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Fields        []string               `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"` // JSON paths e.g., "messages[0].content"
	Method        string                 `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"` // "mask" | "hash" | "drop"
	SaltId        string                 `protobuf:"bytes,3,opt,name=salt_id,json=saltId,proto3" json:"salt_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RedactionInfo) Reset() {
	*x = RedactionInfo{}
	mi := &file_chaukas_spec_common_v1_events_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RedactionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedactionInfo) ProtoMessage() {}

func (x *RedactionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_chaukas_spec_common_v1_events_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedactionInfo.ProtoReflect.Descriptor instead.
func (*RedactionInfo) Descriptor() ([]byte, []int) {
	return file_chaukas_spec_common_v1_events_proto_rawDescGZIP(), []int{6}
}

func (x *RedactionInfo) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *RedactionInfo) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *RedactionInfo) GetSaltId() string {
	if x != nil {
		return x.SaltId
	}
	return ""
}

type RetryInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Attempt       int32                  `protobuf:"varint,1,opt,name=attempt,proto3" json:"attempt,omitempty"`  // 1-based
	Strategy      string                 `protobuf:"bytes,2,opt,name=strategy,proto3" json:"strategy,omitempty"` // "exponential_backoff"
	BackoffMs     int32                  `protobuf:"varint,3,opt,name=backoff_ms,json=backoffMs,proto3" json:"backoff_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RetryInfo) Reset() {
	*x = RetryInfo{}
	mi := &file_chaukas_spec_common_v1_events_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetryInfo) ProtoMessage() {}

func (x *RetryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_chaukas_spec_common_v1_events_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetryInfo.ProtoReflect.Descriptor instead.
func (*RetryInfo) Descriptor() ([]byte, []int) {
	return file_chaukas_spec_common_v1_events_proto_rawDescGZIP(), []int{7}
}

func (x *RetryInfo) GetAttempt() int32 {
	if x != nil {
		return x.Attempt
	}
	return 0
}

func (x *RetryInfo) GetStrategy() string {
	if x != nil {
		return x.Strategy
	}
	return ""
}

func (x *RetryInfo) GetBackoffMs() int32 {
	if x != nil {
		return x.BackoffMs
	}
	return 0
}

type PerformanceMetrics struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CpuPercent    float64                `protobuf:"fixed64,1,opt,name=cpu_percent,json=cpuPercent,proto3" json:"cpu_percent,omitempty"`
	MemoryMb      float64                `protobuf:"fixed64,2,opt,name=memory_mb,json=memoryMb,proto3" json:"memory_mb,omitempty"`
	DurationMs    float64                `protobuf:"fixed64,3,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"`
	Throughput    float64                `protobuf:"fixed64,4,opt,name=throughput,proto3" json:"throughput,omitempty"`
	LatencyMs     float64                `protobuf:"fixed64,5,opt,name=latency_ms,json=latencyMs,proto3" json:"latency_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PerformanceMetrics) Reset() {
	*x = PerformanceMetrics{}
	mi := &file_chaukas_spec_common_v1_events_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PerformanceMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerformanceMetrics) ProtoMessage() {}

func (x *PerformanceMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_chaukas_spec_common_v1_events_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerformanceMetrics.ProtoReflect.Descriptor instead.
func (*PerformanceMetrics) Descriptor() ([]byte, []int) {
	return file_chaukas_spec_common_v1_events_proto_rawDescGZIP(), []int{8}
}

func (x *PerformanceMetrics) GetCpuPercent() float64 {
	if x != nil {
		return x.CpuPercent
	}
	return 0
}

func (x *PerformanceMetrics) GetMemoryMb() float64 {
	if x != nil {
		return x.MemoryMb
	}
	return 0
}

func (x *PerformanceMetrics) GetDurationMs() float64 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

func (x *PerformanceMetrics) GetThroughput() float64 {
	if x != nil {
		return x.Throughput
	}
	return 0
}

func (x *PerformanceMetrics) GetLatencyMs() float64 {
	if x != nil {
		return x.LatencyMs
	}
	return 0
}

type InfrastructureMetrics struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ResourceType  string                 `protobuf:"bytes,1,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"` // "container","pod","host"
	Metrics       *structpb.Struct       `protobuf:"bytes,2,opt,name=metrics,proto3" json:"metrics,omitempty"`                               // numeric map
	Host          string                 `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	ProcessId     int32                  `protobuf:"varint,4,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	ThreadId      string                 `protobuf:"bytes,5,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InfrastructureMetrics) Reset() {
	*x = InfrastructureMetrics{}
	mi := &file_chaukas_spec_common_v1_events_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InfrastructureMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfrastructureMetrics) ProtoMessage() {}

func (x *InfrastructureMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_chaukas_spec_common_v1_events_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfrastructureMetrics.ProtoReflect.Descriptor instead.
func (*InfrastructureMetrics) Descriptor() ([]byte, []int) {
	return file_chaukas_spec_common_v1_events_proto_rawDescGZIP(), []int{9}
}

func (x *InfrastructureMetrics) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *InfrastructureMetrics) GetMetrics() *structpb.Struct {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *InfrastructureMetrics) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *InfrastructureMetrics) GetProcessId() int32 {
	if x != nil {
		return x.ProcessId
	}
	return 0
}

func (x *InfrastructureMetrics) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

type CostDetails struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Provider           string                 `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"` // "openai","anthropic"
	Service            string                 `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`   // "chat.completions"
	InputTokens        int32                  `protobuf:"varint,3,opt,name=input_tokens,json=inputTokens,proto3" json:"input_tokens,omitempty"`
	OutputTokens       int32                  `protobuf:"varint,4,opt,name=output_tokens,json=outputTokens,proto3" json:"output_tokens,omitempty"`
	TotalTokens        int32                  `protobuf:"varint,5,opt,name=total_tokens,json=totalTokens,proto3" json:"total_tokens,omitempty"`
	InputCost          float64                `protobuf:"fixed64,6,opt,name=input_cost,json=inputCost,proto3" json:"input_cost,omitempty"`
	OutputCost         float64                `protobuf:"fixed64,7,opt,name=output_cost,json=outputCost,proto3" json:"output_cost,omitempty"`
	TotalCost          float64                `protobuf:"fixed64,8,opt,name=total_cost,json=totalCost,proto3" json:"total_cost,omitempty"`
	Currency           string                 `protobuf:"bytes,9,opt,name=currency,proto3" json:"currency,omitempty"` // "USD"
	InputRatePerToken  float64                `protobuf:"fixed64,10,opt,name=input_rate_per_token,json=inputRatePerToken,proto3" json:"input_rate_per_token,omitempty"`
	OutputRatePerToken float64                `protobuf:"fixed64,11,opt,name=output_rate_per_token,json=outputRatePerToken,proto3" json:"output_rate_per_token,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CostDetails) Reset() {
	*x = CostDetails{}
	mi := &file_chaukas_spec_common_v1_events_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CostDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CostDetails) ProtoMessage() {}

func (x *CostDetails) ProtoReflect() protoreflect.Message {
	mi := &file_chaukas_spec_common_v1_events_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CostDetails.ProtoReflect.Descriptor instead.
func (*CostDetails) Descriptor() ([]byte, []int) {
	return file_chaukas_spec_common_v1_events_proto_rawDescGZIP(), []int{10}
}

func (x *CostDetails) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *CostDetails) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *CostDetails) GetInputTokens() int32 {
	if x != nil {
		return x.InputTokens
	}
	return 0
}

func (x *CostDetails) GetOutputTokens() int32 {
	if x != nil {
		return x.OutputTokens
	}
	return 0
}

func (x *CostDetails) GetTotalTokens() int32 {
	if x != nil {
		return x.TotalTokens
	}
	return 0
}

func (x *CostDetails) GetInputCost() float64 {
	if x != nil {
		return x.InputCost
	}
	return 0
}

func (x *CostDetails) GetOutputCost() float64 {
	if x != nil {
		return x.OutputCost
	}
	return 0
}

func (x *CostDetails) GetTotalCost() float64 {
	if x != nil {
		return x.TotalCost
	}
	return 0
}

func (x *CostDetails) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *CostDetails) GetInputRatePerToken() float64 {
	if x != nil {
		return x.InputRatePerToken
	}
	return 0
}

func (x *CostDetails) GetOutputRatePerToken() float64 {
	if x != nil {
		return x.OutputRatePerToken
	}
	return 0
}

type AgentHandoff struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromAgentId   string                 `protobuf:"bytes,1,opt,name=from_agent_id,json=fromAgentId,proto3" json:"from_agent_id,omitempty"`
	FromAgentName string                 `protobuf:"bytes,2,opt,name=from_agent_name,json=fromAgentName,proto3" json:"from_agent_name,omitempty"`
	ToAgentId     string                 `protobuf:"bytes,3,opt,name=to_agent_id,json=toAgentId,proto3" json:"to_agent_id,omitempty"`
	ToAgentName   string                 `protobuf:"bytes,4,opt,name=to_agent_name,json=toAgentName,proto3" json:"to_agent_name,omitempty"`
	HandoffData   *structpb.Struct       `protobuf:"bytes,5,opt,name=handoff_data,json=handoffData,proto3" json:"handoff_data,omitempty"`
	Reason        string                 `protobuf:"bytes,6,opt,name=reason,proto3" json:"reason,omitempty"`
	HandoffType   string                 `protobuf:"bytes,7,opt,name=handoff_type,json=handoffType,proto3" json:"handoff_type,omitempty"` // "sequential", "parallel", "conditional"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AgentHandoff) Reset() {
	*x = AgentHandoff{}
	mi := &file_chaukas_spec_common_v1_events_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgentHandoff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentHandoff) ProtoMessage() {}

func (x *AgentHandoff) ProtoReflect() protoreflect.Message {
	mi := &file_chaukas_spec_common_v1_events_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentHandoff.ProtoReflect.Descriptor instead.
func (*AgentHandoff) Descriptor() ([]byte, []int) {
	return file_chaukas_spec_common_v1_events_proto_rawDescGZIP(), []int{11}
}

func (x *AgentHandoff) GetFromAgentId() string {
	if x != nil {
		return x.FromAgentId
	}
	return ""
}

func (x *AgentHandoff) GetFromAgentName() string {
	if x != nil {
		return x.FromAgentName
	}
	return ""
}

func (x *AgentHandoff) GetToAgentId() string {
	if x != nil {
		return x.ToAgentId
	}
	return ""
}

func (x *AgentHandoff) GetToAgentName() string {
	if x != nil {
		return x.ToAgentName
	}
	return ""
}

func (x *AgentHandoff) GetHandoffData() *structpb.Struct {
	if x != nil {
		return x.HandoffData
	}
	return nil
}

func (x *AgentHandoff) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *AgentHandoff) GetHandoffType() string {
	if x != nil {
		return x.HandoffType
	}
	return ""
}

type MCPCall struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ServerName      string                 `protobuf:"bytes,1,opt,name=server_name,json=serverName,proto3" json:"server_name,omitempty"`
	ServerUrl       string                 `protobuf:"bytes,2,opt,name=server_url,json=serverUrl,proto3" json:"server_url,omitempty"`
	Operation       string                 `protobuf:"bytes,3,opt,name=operation,proto3" json:"operation,omitempty"` // "tools/list", "resources/read", etc.
	Method          string                 `protobuf:"bytes,4,opt,name=method,proto3" json:"method,omitempty"`       // "GET", "POST", etc.
	Request         *structpb.Struct       `protobuf:"bytes,5,opt,name=request,proto3" json:"request,omitempty"`
	Response        *structpb.Struct       `protobuf:"bytes,6,opt,name=response,proto3" json:"response,omitempty"`
	ProtocolVersion string                 `protobuf:"bytes,7,opt,name=protocol_version,json=protocolVersion,proto3" json:"protocol_version,omitempty"`
	ExecutionTimeMs float64                `protobuf:"fixed64,8,opt,name=execution_time_ms,json=executionTimeMs,proto3" json:"execution_time_ms,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *MCPCall) Reset() {
	*x = MCPCall{}
	mi := &file_chaukas_spec_common_v1_events_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MCPCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MCPCall) ProtoMessage() {}

func (x *MCPCall) ProtoReflect() protoreflect.Message {
	mi := &file_chaukas_spec_common_v1_events_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MCPCall.ProtoReflect.Descriptor instead.
func (*MCPCall) Descriptor() ([]byte, []int) {
	return file_chaukas_spec_common_v1_events_proto_rawDescGZIP(), []int{12}
}

func (x *MCPCall) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *MCPCall) GetServerUrl() string {
	if x != nil {
		return x.ServerUrl
	}
	return ""
}

func (x *MCPCall) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *MCPCall) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *MCPCall) GetRequest() *structpb.Struct {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *MCPCall) GetResponse() *structpb.Struct {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *MCPCall) GetProtocolVersion() string {
	if x != nil {
		return x.ProtocolVersion
	}
	return ""
}

func (x *MCPCall) GetExecutionTimeMs() float64 {
	if x != nil {
		return x.ExecutionTimeMs
	}
	return 0
}

type ErrorInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ErrorMessage   string                 `protobuf:"bytes,1,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	ErrorCode      string                 `protobuf:"bytes,2,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	StackTrace     string                 `protobuf:"bytes,3,opt,name=stack_trace,json=stackTrace,proto3" json:"stack_trace,omitempty"`
	Recoverable    bool                   `protobuf:"varint,4,opt,name=recoverable,proto3" json:"recoverable,omitempty"`
	RecoveryAction string                 `protobuf:"bytes,5,opt,name=recovery_action,json=recoveryAction,proto3" json:"recovery_action,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ErrorInfo) Reset() {
	*x = ErrorInfo{}
	mi := &file_chaukas_spec_common_v1_events_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorInfo) ProtoMessage() {}

func (x *ErrorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_chaukas_spec_common_v1_events_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorInfo.ProtoReflect.Descriptor instead.
func (*ErrorInfo) Descriptor() ([]byte, []int) {
	return file_chaukas_spec_common_v1_events_proto_rawDescGZIP(), []int{13}
}

func (x *ErrorInfo) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ErrorInfo) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *ErrorInfo) GetStackTrace() string {
	if x != nil {
		return x.StackTrace
	}
	return ""
}

func (x *ErrorInfo) GetRecoverable() bool {
	if x != nil {
		return x.Recoverable
	}
	return false
}

func (x *ErrorInfo) GetRecoveryAction() string {
	if x != nil {
		return x.RecoveryAction
	}
	return ""
}

type Event struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Identity & tenancy
	EventId   string `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	TenantId  string `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	ProjectId string `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// Correlation
	SessionId    string `protobuf:"bytes,4,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	SpanId       string `protobuf:"bytes,5,opt,name=span_id,json=spanId,proto3" json:"span_id,omitempty"`
	ParentSpanId string `protobuf:"bytes,6,opt,name=parent_span_id,json=parentSpanId,proto3" json:"parent_span_id,omitempty"`
	// Classification
	Type     EventType   `protobuf:"varint,7,opt,name=type,proto3,enum=chaukas.spec.common.v1.EventType" json:"type,omitempty"`
	Severity Severity    `protobuf:"varint,8,opt,name=severity,proto3,enum=chaukas.spec.common.v1.Severity" json:"severity,omitempty"`
	Status   EventStatus `protobuf:"varint,9,opt,name=status,proto3,enum=chaukas.spec.common.v1.EventStatus" json:"status,omitempty"`
	Author   Author      `protobuf:"varint,10,opt,name=author,proto3,enum=chaukas.spec.common.v1.Author" json:"author,omitempty"`
	// Timing & actors
	Timestamp    *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	AgentId      string                 `protobuf:"bytes,12,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	AgentName    string                 `protobuf:"bytes,13,opt,name=agent_name,json=agentName,proto3" json:"agent_name,omitempty"`
	InvocationId string                 `protobuf:"bytes,14,opt,name=invocation_id,json=invocationId,proto3" json:"invocation_id,omitempty"`
	ResponseId   string                 `protobuf:"bytes,15,opt,name=response_id,json=responseId,proto3" json:"response_id,omitempty"`
	// Flags
	IsPartial bool `protobuf:"varint,16,opt,name=is_partial,json=isPartial,proto3" json:"is_partial,omitempty"`
	IsFinal   bool `protobuf:"varint,17,opt,name=is_final,json=isFinal,proto3" json:"is_final,omitempty"`
	// Integrity (WORM)
	HashPrev    string `protobuf:"bytes,18,opt,name=hash_prev,json=hashPrev,proto3" json:"hash_prev,omitempty"`          // hex-encoded
	ContentHash string `protobuf:"bytes,19,opt,name=content_hash,json=contentHash,proto3" json:"content_hash,omitempty"` // hex-encoded
	WormProofId string `protobuf:"bytes,20,opt,name=worm_proof_id,json=wormProofId,proto3" json:"worm_proof_id,omitempty"`
	// Misc
	Branch  string   `protobuf:"bytes,21,opt,name=branch,proto3" json:"branch,omitempty"`
	Tags    []string `protobuf:"bytes,22,rep,name=tags,proto3" json:"tags,omitempty"`
	TraceId string   `protobuf:"bytes,23,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"` // Distributed trace identifier
	// Content union (exactly one when applicable)
	//
	// Types that are valid to be assigned to Content:
	//
	//	*Event_Message
	//	*Event_ToolCall
	//	*Event_ToolResponse
	//	*Event_LlmInvocation
	//	*Event_Policy
	//	*Event_DataAccess
	//	*Event_StateUpdate
	//	*Event_Error
	//	*Event_AgentHandoff
	//	*Event_McpCall
	Content isEvent_Content `protobuf_oneof:"content"`
	// Cross-cutting optional attachments (may appear with any type)
	Retry          *RetryInfo             `protobuf:"bytes,60,opt,name=retry,proto3" json:"retry,omitempty"`
	Redaction      *RedactionInfo         `protobuf:"bytes,61,opt,name=redaction,proto3" json:"redaction,omitempty"`
	PiiCategories  []string               `protobuf:"bytes,62,rep,name=pii_categories,json=piiCategories,proto3" json:"pii_categories,omitempty"`
	Performance    *PerformanceMetrics    `protobuf:"bytes,70,opt,name=performance,proto3" json:"performance,omitempty"`
	Infrastructure *InfrastructureMetrics `protobuf:"bytes,71,opt,name=infrastructure,proto3" json:"infrastructure,omitempty"`
	Cost           *CostDetails           `protobuf:"bytes,72,opt,name=cost,proto3" json:"cost,omitempty"`
	// Free-form metadata (lightweight)
	Metadata *structpb.Struct `protobuf:"bytes,90,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Escape hatch for future extensions
	Extensions    []*anypb.Any `protobuf:"bytes,99,rep,name=extensions,proto3" json:"extensions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_chaukas_spec_common_v1_events_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_chaukas_spec_common_v1_events_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_chaukas_spec_common_v1_events_proto_rawDescGZIP(), []int{14}
}

func (x *Event) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *Event) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *Event) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *Event) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *Event) GetSpanId() string {
	if x != nil {
		return x.SpanId
	}
	return ""
}

func (x *Event) GetParentSpanId() string {
	if x != nil {
		return x.ParentSpanId
	}
	return ""
}

func (x *Event) GetType() EventType {
	if x != nil {
		return x.Type
	}
	return EventType_EVENT_TYPE_UNSPECIFIED
}

func (x *Event) GetSeverity() Severity {
	if x != nil {
		return x.Severity
	}
	return Severity_SEVERITY_UNSPECIFIED
}

func (x *Event) GetStatus() EventStatus {
	if x != nil {
		return x.Status
	}
	return EventStatus_EVENT_STATUS_UNSPECIFIED
}

func (x *Event) GetAuthor() Author {
	if x != nil {
		return x.Author
	}
	return Author_AUTHOR_UNSPECIFIED
}

func (x *Event) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Event) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *Event) GetAgentName() string {
	if x != nil {
		return x.AgentName
	}
	return ""
}

func (x *Event) GetInvocationId() string {
	if x != nil {
		return x.InvocationId
	}
	return ""
}

func (x *Event) GetResponseId() string {
	if x != nil {
		return x.ResponseId
	}
	return ""
}

func (x *Event) GetIsPartial() bool {
	if x != nil {
		return x.IsPartial
	}
	return false
}

func (x *Event) GetIsFinal() bool {
	if x != nil {
		return x.IsFinal
	}
	return false
}

func (x *Event) GetHashPrev() string {
	if x != nil {
		return x.HashPrev
	}
	return ""
}

func (x *Event) GetContentHash() string {
	if x != nil {
		return x.ContentHash
	}
	return ""
}

func (x *Event) GetWormProofId() string {
	if x != nil {
		return x.WormProofId
	}
	return ""
}

func (x *Event) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *Event) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Event) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *Event) GetContent() isEvent_Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *Event) GetMessage() *MessageContent {
	if x != nil {
		if x, ok := x.Content.(*Event_Message); ok {
			return x.Message
		}
	}
	return nil
}

func (x *Event) GetToolCall() *ToolCall {
	if x != nil {
		if x, ok := x.Content.(*Event_ToolCall); ok {
			return x.ToolCall
		}
	}
	return nil
}

func (x *Event) GetToolResponse() *ToolResponse {
	if x != nil {
		if x, ok := x.Content.(*Event_ToolResponse); ok {
			return x.ToolResponse
		}
	}
	return nil
}

func (x *Event) GetLlmInvocation() *LLMInvocation {
	if x != nil {
		if x, ok := x.Content.(*Event_LlmInvocation); ok {
			return x.LlmInvocation
		}
	}
	return nil
}

func (x *Event) GetPolicy() *PolicyDecision {
	if x != nil {
		if x, ok := x.Content.(*Event_Policy); ok {
			return x.Policy
		}
	}
	return nil
}

func (x *Event) GetDataAccess() *DataAccess {
	if x != nil {
		if x, ok := x.Content.(*Event_DataAccess); ok {
			return x.DataAccess
		}
	}
	return nil
}

func (x *Event) GetStateUpdate() *structpb.Struct {
	if x != nil {
		if x, ok := x.Content.(*Event_StateUpdate); ok {
			return x.StateUpdate
		}
	}
	return nil
}

func (x *Event) GetError() *ErrorInfo {
	if x != nil {
		if x, ok := x.Content.(*Event_Error); ok {
			return x.Error
		}
	}
	return nil
}

func (x *Event) GetAgentHandoff() *AgentHandoff {
	if x != nil {
		if x, ok := x.Content.(*Event_AgentHandoff); ok {
			return x.AgentHandoff
		}
	}
	return nil
}

func (x *Event) GetMcpCall() *MCPCall {
	if x != nil {
		if x, ok := x.Content.(*Event_McpCall); ok {
			return x.McpCall
		}
	}
	return nil
}

func (x *Event) GetRetry() *RetryInfo {
	if x != nil {
		return x.Retry
	}
	return nil
}

func (x *Event) GetRedaction() *RedactionInfo {
	if x != nil {
		return x.Redaction
	}
	return nil
}

func (x *Event) GetPiiCategories() []string {
	if x != nil {
		return x.PiiCategories
	}
	return nil
}

func (x *Event) GetPerformance() *PerformanceMetrics {
	if x != nil {
		return x.Performance
	}
	return nil
}

func (x *Event) GetInfrastructure() *InfrastructureMetrics {
	if x != nil {
		return x.Infrastructure
	}
	return nil
}

func (x *Event) GetCost() *CostDetails {
	if x != nil {
		return x.Cost
	}
	return nil
}

func (x *Event) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Event) GetExtensions() []*anypb.Any {
	if x != nil {
		return x.Extensions
	}
	return nil
}

type isEvent_Content interface {
	isEvent_Content()
}

type Event_Message struct {
	Message *MessageContent `protobuf:"bytes,30,opt,name=message,proto3,oneof"`
}

type Event_ToolCall struct {
	ToolCall *ToolCall `protobuf:"bytes,31,opt,name=tool_call,json=toolCall,proto3,oneof"`
}

type Event_ToolResponse struct {
	ToolResponse *ToolResponse `protobuf:"bytes,32,opt,name=tool_response,json=toolResponse,proto3,oneof"`
}

type Event_LlmInvocation struct {
	LlmInvocation *LLMInvocation `protobuf:"bytes,33,opt,name=llm_invocation,json=llmInvocation,proto3,oneof"`
}

type Event_Policy struct {
	Policy *PolicyDecision `protobuf:"bytes,34,opt,name=policy,proto3,oneof"`
}

type Event_DataAccess struct {
	DataAccess *DataAccess `protobuf:"bytes,35,opt,name=data_access,json=dataAccess,proto3,oneof"`
}

type Event_StateUpdate struct {
	StateUpdate *structpb.Struct `protobuf:"bytes,36,opt,name=state_update,json=stateUpdate,proto3,oneof"`
}

type Event_Error struct {
	Error *ErrorInfo `protobuf:"bytes,37,opt,name=error,proto3,oneof"`
}

type Event_AgentHandoff struct {
	AgentHandoff *AgentHandoff `protobuf:"bytes,38,opt,name=agent_handoff,json=agentHandoff,proto3,oneof"`
}

type Event_McpCall struct {
	McpCall *MCPCall `protobuf:"bytes,39,opt,name=mcp_call,json=mcpCall,proto3,oneof"`
}

func (*Event_Message) isEvent_Content() {}

func (*Event_ToolCall) isEvent_Content() {}

func (*Event_ToolResponse) isEvent_Content() {}

func (*Event_LlmInvocation) isEvent_Content() {}

func (*Event_Policy) isEvent_Content() {}

func (*Event_DataAccess) isEvent_Content() {}

func (*Event_StateUpdate) isEvent_Content() {}

func (*Event_Error) isEvent_Content() {}

func (*Event_AgentHandoff) isEvent_Content() {}

func (*Event_McpCall) isEvent_Content() {}

type EventBatch struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	BatchId   string                 `protobuf:"bytes,1,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Events    []*Event               `protobuf:"bytes,3,rep,name=events,proto3" json:"events,omitempty"`
	Metadata  *structpb.Struct       `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Aggregates (optional)
	TotalCost       float64 `protobuf:"fixed64,10,opt,name=total_cost,json=totalCost,proto3" json:"total_cost,omitempty"`
	TotalTokens     int32   `protobuf:"varint,11,opt,name=total_tokens,json=totalTokens,proto3" json:"total_tokens,omitempty"`
	TotalDurationMs float64 `protobuf:"fixed64,12,opt,name=total_duration_ms,json=totalDurationMs,proto3" json:"total_duration_ms,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *EventBatch) Reset() {
	*x = EventBatch{}
	mi := &file_chaukas_spec_common_v1_events_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventBatch) ProtoMessage() {}

func (x *EventBatch) ProtoReflect() protoreflect.Message {
	mi := &file_chaukas_spec_common_v1_events_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventBatch.ProtoReflect.Descriptor instead.
func (*EventBatch) Descriptor() ([]byte, []int) {
	return file_chaukas_spec_common_v1_events_proto_rawDescGZIP(), []int{15}
}

func (x *EventBatch) GetBatchId() string {
	if x != nil {
		return x.BatchId
	}
	return ""
}

func (x *EventBatch) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *EventBatch) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *EventBatch) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *EventBatch) GetTotalCost() float64 {
	if x != nil {
		return x.TotalCost
	}
	return 0
}

func (x *EventBatch) GetTotalTokens() int32 {
	if x != nil {
		return x.TotalTokens
	}
	return 0
}

func (x *EventBatch) GetTotalDurationMs() float64 {
	if x != nil {
		return x.TotalDurationMs
	}
	return 0
}

var File_chaukas_spec_common_v1_events_proto protoreflect.FileDescriptor

const file_chaukas_spec_common_v1_events_proto_rawDesc = "" +
	"\n" +
	"#chaukas/spec/common/v1/events.proto\x12\x16chaukas.spec.common.v1\x1a\x19google/protobuf/any.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"m\n" +
	"\x0eMessageContent\x12\x12\n" +
	"\x04role\x18\x01 \x01(\tR\x04role\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\x123\n" +
	"\bmetadata\x18\x03 \x01(\v2\x17.google.protobuf.StructR\bmetadata\"\xaf\x01\n" +
	"\bToolCall\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x125\n" +
	"\targuments\x18\x03 \x01(\v2\x17.google.protobuf.StructR\targuments\x12#\n" +
	"\rauth_required\x18\x04 \x01(\bR\fauthRequired\x12#\n" +
	"\rfunction_name\x18\x05 \x01(\tR\ffunctionName\"\xd3\x01\n" +
	"\fToolResponse\x12 \n" +
	"\ftool_call_id\x18\x01 \x01(\tR\n" +
	"toolCallId\x12/\n" +
	"\x06output\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x06output\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\x12*\n" +
	"\x11execution_time_ms\x18\x04 \x01(\x01R\x0fexecutionTimeMs\x12\x1f\n" +
	"\vhttp_status\x18\x05 \x01(\x05R\n" +
	"httpStatus\"\x84\x05\n" +
	"\rLLMInvocation\x12\x1a\n" +
	"\bprovider\x18\x01 \x01(\tR\bprovider\x12\x14\n" +
	"\x05model\x18\x02 \x01(\tR\x05model\x121\n" +
	"\arequest\x18\x03 \x01(\v2\x17.google.protobuf.StructR\arequest\x123\n" +
	"\bresponse\x18\x04 \x01(\v2\x17.google.protobuf.StructR\bresponse\x12#\n" +
	"\rprompt_tokens\x18\x05 \x01(\x05R\fpromptTokens\x12+\n" +
	"\x11completion_tokens\x18\x06 \x01(\x05R\x10completionTokens\x12!\n" +
	"\ftotal_tokens\x18\a \x01(\x05R\vtotalTokens\x12 \n" +
	"\vtemperature\x18\b \x01(\x01R\vtemperature\x12\x1d\n" +
	"\n" +
	"max_tokens\x18\t \x01(\x05R\tmaxTokens\x12\x13\n" +
	"\x05top_p\x18\n" +
	" \x01(\x01R\x04topP\x12+\n" +
	"\x11frequency_penalty\x18\v \x01(\x01R\x10frequencyPenalty\x12)\n" +
	"\x10presence_penalty\x18\f \x01(\x01R\x0fpresencePenalty\x129\n" +
	"\n" +
	"start_time\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x0e \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12\x1f\n" +
	"\vduration_ms\x18\x0f \x01(\x01R\n" +
	"durationMs\x12#\n" +
	"\rfinish_reason\x18\x10 \x01(\tR\ffinishReason\"\x80\x01\n" +
	"\x0ePolicyDecision\x12\x1b\n" +
	"\tpolicy_id\x18\x01 \x01(\tR\bpolicyId\x12\x18\n" +
	"\aoutcome\x18\x02 \x01(\tR\aoutcome\x12\x19\n" +
	"\brule_ids\x18\x03 \x03(\tR\aruleIds\x12\x1c\n" +
	"\trationale\x18\x04 \x01(\tR\trationale\"\x93\x01\n" +
	"\n" +
	"DataAccess\x12\x1e\n" +
	"\n" +
	"datasource\x18\x01 \x01(\tR\n" +
	"datasource\x12!\n" +
	"\fdocument_ids\x18\x02 \x03(\tR\vdocumentIds\x12\x1b\n" +
	"\tchunk_ids\x18\x03 \x03(\tR\bchunkIds\x12%\n" +
	"\x0epii_categories\x18\x04 \x03(\tR\rpiiCategories\"X\n" +
	"\rRedactionInfo\x12\x16\n" +
	"\x06fields\x18\x01 \x03(\tR\x06fields\x12\x16\n" +
	"\x06method\x18\x02 \x01(\tR\x06method\x12\x17\n" +
	"\asalt_id\x18\x03 \x01(\tR\x06saltId\"`\n" +
	"\tRetryInfo\x12\x18\n" +
	"\aattempt\x18\x01 \x01(\x05R\aattempt\x12\x1a\n" +
	"\bstrategy\x18\x02 \x01(\tR\bstrategy\x12\x1d\n" +
	"\n" +
	"backoff_ms\x18\x03 \x01(\x05R\tbackoffMs\"\xb2\x01\n" +
	"\x12PerformanceMetrics\x12\x1f\n" +
	"\vcpu_percent\x18\x01 \x01(\x01R\n" +
	"cpuPercent\x12\x1b\n" +
	"\tmemory_mb\x18\x02 \x01(\x01R\bmemoryMb\x12\x1f\n" +
	"\vduration_ms\x18\x03 \x01(\x01R\n" +
	"durationMs\x12\x1e\n" +
	"\n" +
	"throughput\x18\x04 \x01(\x01R\n" +
	"throughput\x12\x1d\n" +
	"\n" +
	"latency_ms\x18\x05 \x01(\x01R\tlatencyMs\"\xbf\x01\n" +
	"\x15InfrastructureMetrics\x12#\n" +
	"\rresource_type\x18\x01 \x01(\tR\fresourceType\x121\n" +
	"\ametrics\x18\x02 \x01(\v2\x17.google.protobuf.StructR\ametrics\x12\x12\n" +
	"\x04host\x18\x03 \x01(\tR\x04host\x12\x1d\n" +
	"\n" +
	"process_id\x18\x04 \x01(\x05R\tprocessId\x12\x1b\n" +
	"\tthread_id\x18\x05 \x01(\tR\bthreadId\"\x8d\x03\n" +
	"\vCostDetails\x12\x1a\n" +
	"\bprovider\x18\x01 \x01(\tR\bprovider\x12\x18\n" +
	"\aservice\x18\x02 \x01(\tR\aservice\x12!\n" +
	"\finput_tokens\x18\x03 \x01(\x05R\vinputTokens\x12#\n" +
	"\routput_tokens\x18\x04 \x01(\x05R\foutputTokens\x12!\n" +
	"\ftotal_tokens\x18\x05 \x01(\x05R\vtotalTokens\x12\x1d\n" +
	"\n" +
	"input_cost\x18\x06 \x01(\x01R\tinputCost\x12\x1f\n" +
	"\voutput_cost\x18\a \x01(\x01R\n" +
	"outputCost\x12\x1d\n" +
	"\n" +
	"total_cost\x18\b \x01(\x01R\ttotalCost\x12\x1a\n" +
	"\bcurrency\x18\t \x01(\tR\bcurrency\x12/\n" +
	"\x14input_rate_per_token\x18\n" +
	" \x01(\x01R\x11inputRatePerToken\x121\n" +
	"\x15output_rate_per_token\x18\v \x01(\x01R\x12outputRatePerToken\"\x95\x02\n" +
	"\fAgentHandoff\x12\"\n" +
	"\rfrom_agent_id\x18\x01 \x01(\tR\vfromAgentId\x12&\n" +
	"\x0ffrom_agent_name\x18\x02 \x01(\tR\rfromAgentName\x12\x1e\n" +
	"\vto_agent_id\x18\x03 \x01(\tR\ttoAgentId\x12\"\n" +
	"\rto_agent_name\x18\x04 \x01(\tR\vtoAgentName\x12:\n" +
	"\fhandoff_data\x18\x05 \x01(\v2\x17.google.protobuf.StructR\vhandoffData\x12\x16\n" +
	"\x06reason\x18\x06 \x01(\tR\x06reason\x12!\n" +
	"\fhandoff_type\x18\a \x01(\tR\vhandoffType\"\xbe\x02\n" +
	"\aMCPCall\x12\x1f\n" +
	"\vserver_name\x18\x01 \x01(\tR\n" +
	"serverName\x12\x1d\n" +
	"\n" +
	"server_url\x18\x02 \x01(\tR\tserverUrl\x12\x1c\n" +
	"\toperation\x18\x03 \x01(\tR\toperation\x12\x16\n" +
	"\x06method\x18\x04 \x01(\tR\x06method\x121\n" +
	"\arequest\x18\x05 \x01(\v2\x17.google.protobuf.StructR\arequest\x123\n" +
	"\bresponse\x18\x06 \x01(\v2\x17.google.protobuf.StructR\bresponse\x12)\n" +
	"\x10protocol_version\x18\a \x01(\tR\x0fprotocolVersion\x12*\n" +
	"\x11execution_time_ms\x18\b \x01(\x01R\x0fexecutionTimeMs\"\xbb\x01\n" +
	"\tErrorInfo\x12#\n" +
	"\rerror_message\x18\x01 \x01(\tR\ferrorMessage\x12\x1d\n" +
	"\n" +
	"error_code\x18\x02 \x01(\tR\terrorCode\x12\x1f\n" +
	"\vstack_trace\x18\x03 \x01(\tR\n" +
	"stackTrace\x12 \n" +
	"\vrecoverable\x18\x04 \x01(\bR\vrecoverable\x12'\n" +
	"\x0frecovery_action\x18\x05 \x01(\tR\x0erecoveryAction\"\xed\x0f\n" +
	"\x05Event\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\x12\x1b\n" +
	"\ttenant_id\x18\x02 \x01(\tR\btenantId\x12\x1d\n" +
	"\n" +
	"project_id\x18\x03 \x01(\tR\tprojectId\x12\x1d\n" +
	"\n" +
	"session_id\x18\x04 \x01(\tR\tsessionId\x12\x17\n" +
	"\aspan_id\x18\x05 \x01(\tR\x06spanId\x12$\n" +
	"\x0eparent_span_id\x18\x06 \x01(\tR\fparentSpanId\x125\n" +
	"\x04type\x18\a \x01(\x0e2!.chaukas.spec.common.v1.EventTypeR\x04type\x12<\n" +
	"\bseverity\x18\b \x01(\x0e2 .chaukas.spec.common.v1.SeverityR\bseverity\x12;\n" +
	"\x06status\x18\t \x01(\x0e2#.chaukas.spec.common.v1.EventStatusR\x06status\x126\n" +
	"\x06author\x18\n" +
	" \x01(\x0e2\x1e.chaukas.spec.common.v1.AuthorR\x06author\x128\n" +
	"\ttimestamp\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x19\n" +
	"\bagent_id\x18\f \x01(\tR\aagentId\x12\x1d\n" +
	"\n" +
	"agent_name\x18\r \x01(\tR\tagentName\x12#\n" +
	"\rinvocation_id\x18\x0e \x01(\tR\finvocationId\x12\x1f\n" +
	"\vresponse_id\x18\x0f \x01(\tR\n" +
	"responseId\x12\x1d\n" +
	"\n" +
	"is_partial\x18\x10 \x01(\bR\tisPartial\x12\x19\n" +
	"\bis_final\x18\x11 \x01(\bR\aisFinal\x12\x1b\n" +
	"\thash_prev\x18\x12 \x01(\tR\bhashPrev\x12!\n" +
	"\fcontent_hash\x18\x13 \x01(\tR\vcontentHash\x12\"\n" +
	"\rworm_proof_id\x18\x14 \x01(\tR\vwormProofId\x12\x16\n" +
	"\x06branch\x18\x15 \x01(\tR\x06branch\x12\x12\n" +
	"\x04tags\x18\x16 \x03(\tR\x04tags\x12\x19\n" +
	"\btrace_id\x18\x17 \x01(\tR\atraceId\x12B\n" +
	"\amessage\x18\x1e \x01(\v2&.chaukas.spec.common.v1.MessageContentH\x00R\amessage\x12?\n" +
	"\ttool_call\x18\x1f \x01(\v2 .chaukas.spec.common.v1.ToolCallH\x00R\btoolCall\x12K\n" +
	"\rtool_response\x18  \x01(\v2$.chaukas.spec.common.v1.ToolResponseH\x00R\ftoolResponse\x12N\n" +
	"\x0ellm_invocation\x18! \x01(\v2%.chaukas.spec.common.v1.LLMInvocationH\x00R\rllmInvocation\x12@\n" +
	"\x06policy\x18\" \x01(\v2&.chaukas.spec.common.v1.PolicyDecisionH\x00R\x06policy\x12E\n" +
	"\vdata_access\x18# \x01(\v2\".chaukas.spec.common.v1.DataAccessH\x00R\n" +
	"dataAccess\x12<\n" +
	"\fstate_update\x18$ \x01(\v2\x17.google.protobuf.StructH\x00R\vstateUpdate\x129\n" +
	"\x05error\x18% \x01(\v2!.chaukas.spec.common.v1.ErrorInfoH\x00R\x05error\x12K\n" +
	"\ragent_handoff\x18& \x01(\v2$.chaukas.spec.common.v1.AgentHandoffH\x00R\fagentHandoff\x12<\n" +
	"\bmcp_call\x18' \x01(\v2\x1f.chaukas.spec.common.v1.MCPCallH\x00R\amcpCall\x127\n" +
	"\x05retry\x18< \x01(\v2!.chaukas.spec.common.v1.RetryInfoR\x05retry\x12C\n" +
	"\tredaction\x18= \x01(\v2%.chaukas.spec.common.v1.RedactionInfoR\tredaction\x12%\n" +
	"\x0epii_categories\x18> \x03(\tR\rpiiCategories\x12L\n" +
	"\vperformance\x18F \x01(\v2*.chaukas.spec.common.v1.PerformanceMetricsR\vperformance\x12U\n" +
	"\x0einfrastructure\x18G \x01(\v2-.chaukas.spec.common.v1.InfrastructureMetricsR\x0einfrastructure\x127\n" +
	"\x04cost\x18H \x01(\v2#.chaukas.spec.common.v1.CostDetailsR\x04cost\x123\n" +
	"\bmetadata\x18Z \x01(\v2\x17.google.protobuf.StructR\bmetadata\x124\n" +
	"\n" +
	"extensions\x18c \x03(\v2\x14.google.protobuf.AnyR\n" +
	"extensionsB\t\n" +
	"\acontent\"\xbb\x02\n" +
	"\n" +
	"EventBatch\x12\x19\n" +
	"\bbatch_id\x18\x01 \x01(\tR\abatchId\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x125\n" +
	"\x06events\x18\x03 \x03(\v2\x1d.chaukas.spec.common.v1.EventR\x06events\x123\n" +
	"\bmetadata\x18\x04 \x01(\v2\x17.google.protobuf.StructR\bmetadata\x12\x1d\n" +
	"\n" +
	"total_cost\x18\n" +
	" \x01(\x01R\ttotalCost\x12!\n" +
	"\ftotal_tokens\x18\v \x01(\x05R\vtotalTokens\x12*\n" +
	"\x11total_duration_ms\x18\f \x01(\x01R\x0ftotalDurationMs*\xd5\x04\n" +
	"\tEventType\x12\x1a\n" +
	"\x16EVENT_TYPE_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18EVENT_TYPE_SESSION_START\x10\x01\x12\x1a\n" +
	"\x16EVENT_TYPE_SESSION_END\x10\x02\x12\x1a\n" +
	"\x16EVENT_TYPE_AGENT_START\x10\n" +
	"\x12\x18\n" +
	"\x14EVENT_TYPE_AGENT_END\x10\v\x12\x1c\n" +
	"\x18EVENT_TYPE_AGENT_HANDOFF\x10\f\x12%\n" +
	"!EVENT_TYPE_MODEL_INVOCATION_START\x10\x14\x12#\n" +
	"\x1fEVENT_TYPE_MODEL_INVOCATION_END\x10\x15\x12\x1e\n" +
	"\x1aEVENT_TYPE_TOOL_CALL_START\x10\x16\x12\x1c\n" +
	"\x18EVENT_TYPE_TOOL_CALL_END\x10\x17\x12\x1d\n" +
	"\x19EVENT_TYPE_MCP_CALL_START\x10\x18\x12\x1b\n" +
	"\x17EVENT_TYPE_MCP_CALL_END\x10\x19\x12\x1d\n" +
	"\x19EVENT_TYPE_INPUT_RECEIVED\x10\x1e\x12\x1d\n" +
	"\x19EVENT_TYPE_OUTPUT_EMITTED\x10\x1f\x12\x14\n" +
	"\x10EVENT_TYPE_ERROR\x10(\x12\x14\n" +
	"\x10EVENT_TYPE_RETRY\x10)\x12\x1e\n" +
	"\x1aEVENT_TYPE_POLICY_DECISION\x10<\x12\x1a\n" +
	"\x16EVENT_TYPE_DATA_ACCESS\x10=\x12\x1b\n" +
	"\x17EVENT_TYPE_STATE_UPDATE\x10>\x12\x15\n" +
	"\x11EVENT_TYPE_SYSTEM\x10?*\xb4\x01\n" +
	"\vEventStatus\x12\x1c\n" +
	"\x18EVENT_STATUS_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14EVENT_STATUS_STARTED\x10\x01\x12\x1c\n" +
	"\x18EVENT_STATUS_IN_PROGRESS\x10\x02\x12\x1a\n" +
	"\x16EVENT_STATUS_COMPLETED\x10\x03\x12\x17\n" +
	"\x13EVENT_STATUS_FAILED\x10\x04\x12\x1a\n" +
	"\x16EVENT_STATUS_CANCELLED\x10\x05*r\n" +
	"\bSeverity\x12\x18\n" +
	"\x14SEVERITY_UNSPECIFIED\x10\x00\x12\x12\n" +
	"\x0eSEVERITY_DEBUG\x10\x01\x12\x11\n" +
	"\rSEVERITY_INFO\x10\x02\x12\x11\n" +
	"\rSEVERITY_WARN\x10\x03\x12\x12\n" +
	"\x0eSEVERITY_ERROR\x10\x04*w\n" +
	"\x06Author\x12\x16\n" +
	"\x12AUTHOR_UNSPECIFIED\x10\x00\x12\x0f\n" +
	"\vAUTHOR_USER\x10\x01\x12\x10\n" +
	"\fAUTHOR_AGENT\x10\x02\x12\x0f\n" +
	"\vAUTHOR_TOOL\x10\x03\x12\x11\n" +
	"\rAUTHOR_SYSTEM\x10\x04\x12\x0e\n" +
	"\n" +
	"AUTHOR_LLM\x10\x05B=Z;github.com/chaukasai/chaukas-spec/chaukas/spec/common/v1;v1b\x06proto3"

var (
	file_chaukas_spec_common_v1_events_proto_rawDescOnce sync.Once
	file_chaukas_spec_common_v1_events_proto_rawDescData []byte
)

func file_chaukas_spec_common_v1_events_proto_rawDescGZIP() []byte {
	file_chaukas_spec_common_v1_events_proto_rawDescOnce.Do(func() {
		file_chaukas_spec_common_v1_events_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chaukas_spec_common_v1_events_proto_rawDesc), len(file_chaukas_spec_common_v1_events_proto_rawDesc)))
	})
	return file_chaukas_spec_common_v1_events_proto_rawDescData
}

var file_chaukas_spec_common_v1_events_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_chaukas_spec_common_v1_events_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_chaukas_spec_common_v1_events_proto_goTypes = []any{
	(EventType)(0),                // 0: chaukas.spec.common.v1.EventType
	(EventStatus)(0),              // 1: chaukas.spec.common.v1.EventStatus
	(Severity)(0),                 // 2: chaukas.spec.common.v1.Severity
	(Author)(0),                   // 3: chaukas.spec.common.v1.Author
	(*MessageContent)(nil),        // 4: chaukas.spec.common.v1.MessageContent
	(*ToolCall)(nil),              // 5: chaukas.spec.common.v1.ToolCall
	(*ToolResponse)(nil),          // 6: chaukas.spec.common.v1.ToolResponse
	(*LLMInvocation)(nil),         // 7: chaukas.spec.common.v1.LLMInvocation
	(*PolicyDecision)(nil),        // 8: chaukas.spec.common.v1.PolicyDecision
	(*DataAccess)(nil),            // 9: chaukas.spec.common.v1.DataAccess
	(*RedactionInfo)(nil),         // 10: chaukas.spec.common.v1.RedactionInfo
	(*RetryInfo)(nil),             // 11: chaukas.spec.common.v1.RetryInfo
	(*PerformanceMetrics)(nil),    // 12: chaukas.spec.common.v1.PerformanceMetrics
	(*InfrastructureMetrics)(nil), // 13: chaukas.spec.common.v1.InfrastructureMetrics
	(*CostDetails)(nil),           // 14: chaukas.spec.common.v1.CostDetails
	(*AgentHandoff)(nil),          // 15: chaukas.spec.common.v1.AgentHandoff
	(*MCPCall)(nil),               // 16: chaukas.spec.common.v1.MCPCall
	(*ErrorInfo)(nil),             // 17: chaukas.spec.common.v1.ErrorInfo
	(*Event)(nil),                 // 18: chaukas.spec.common.v1.Event
	(*EventBatch)(nil),            // 19: chaukas.spec.common.v1.EventBatch
	(*structpb.Struct)(nil),       // 20: google.protobuf.Struct
	(*timestamppb.Timestamp)(nil), // 21: google.protobuf.Timestamp
	(*anypb.Any)(nil),             // 22: google.protobuf.Any
}
var file_chaukas_spec_common_v1_events_proto_depIdxs = []int32{
	20, // 0: chaukas.spec.common.v1.MessageContent.metadata:type_name -> google.protobuf.Struct
	20, // 1: chaukas.spec.common.v1.ToolCall.arguments:type_name -> google.protobuf.Struct
	20, // 2: chaukas.spec.common.v1.ToolResponse.output:type_name -> google.protobuf.Struct
	20, // 3: chaukas.spec.common.v1.LLMInvocation.request:type_name -> google.protobuf.Struct
	20, // 4: chaukas.spec.common.v1.LLMInvocation.response:type_name -> google.protobuf.Struct
	21, // 5: chaukas.spec.common.v1.LLMInvocation.start_time:type_name -> google.protobuf.Timestamp
	21, // 6: chaukas.spec.common.v1.LLMInvocation.end_time:type_name -> google.protobuf.Timestamp
	20, // 7: chaukas.spec.common.v1.InfrastructureMetrics.metrics:type_name -> google.protobuf.Struct
	20, // 8: chaukas.spec.common.v1.AgentHandoff.handoff_data:type_name -> google.protobuf.Struct
	20, // 9: chaukas.spec.common.v1.MCPCall.request:type_name -> google.protobuf.Struct
	20, // 10: chaukas.spec.common.v1.MCPCall.response:type_name -> google.protobuf.Struct
	0,  // 11: chaukas.spec.common.v1.Event.type:type_name -> chaukas.spec.common.v1.EventType
	2,  // 12: chaukas.spec.common.v1.Event.severity:type_name -> chaukas.spec.common.v1.Severity
	1,  // 13: chaukas.spec.common.v1.Event.status:type_name -> chaukas.spec.common.v1.EventStatus
	3,  // 14: chaukas.spec.common.v1.Event.author:type_name -> chaukas.spec.common.v1.Author
	21, // 15: chaukas.spec.common.v1.Event.timestamp:type_name -> google.protobuf.Timestamp
	4,  // 16: chaukas.spec.common.v1.Event.message:type_name -> chaukas.spec.common.v1.MessageContent
	5,  // 17: chaukas.spec.common.v1.Event.tool_call:type_name -> chaukas.spec.common.v1.ToolCall
	6,  // 18: chaukas.spec.common.v1.Event.tool_response:type_name -> chaukas.spec.common.v1.ToolResponse
	7,  // 19: chaukas.spec.common.v1.Event.llm_invocation:type_name -> chaukas.spec.common.v1.LLMInvocation
	8,  // 20: chaukas.spec.common.v1.Event.policy:type_name -> chaukas.spec.common.v1.PolicyDecision
	9,  // 21: chaukas.spec.common.v1.Event.data_access:type_name -> chaukas.spec.common.v1.DataAccess
	20, // 22: chaukas.spec.common.v1.Event.state_update:type_name -> google.protobuf.Struct
	17, // 23: chaukas.spec.common.v1.Event.error:type_name -> chaukas.spec.common.v1.ErrorInfo
	15, // 24: chaukas.spec.common.v1.Event.agent_handoff:type_name -> chaukas.spec.common.v1.AgentHandoff
	16, // 25: chaukas.spec.common.v1.Event.mcp_call:type_name -> chaukas.spec.common.v1.MCPCall
	11, // 26: chaukas.spec.common.v1.Event.retry:type_name -> chaukas.spec.common.v1.RetryInfo
	10, // 27: chaukas.spec.common.v1.Event.redaction:type_name -> chaukas.spec.common.v1.RedactionInfo
	12, // 28: chaukas.spec.common.v1.Event.performance:type_name -> chaukas.spec.common.v1.PerformanceMetrics
	13, // 29: chaukas.spec.common.v1.Event.infrastructure:type_name -> chaukas.spec.common.v1.InfrastructureMetrics
	14, // 30: chaukas.spec.common.v1.Event.cost:type_name -> chaukas.spec.common.v1.CostDetails
	20, // 31: chaukas.spec.common.v1.Event.metadata:type_name -> google.protobuf.Struct
	22, // 32: chaukas.spec.common.v1.Event.extensions:type_name -> google.protobuf.Any
	21, // 33: chaukas.spec.common.v1.EventBatch.timestamp:type_name -> google.protobuf.Timestamp
	18, // 34: chaukas.spec.common.v1.EventBatch.events:type_name -> chaukas.spec.common.v1.Event
	20, // 35: chaukas.spec.common.v1.EventBatch.metadata:type_name -> google.protobuf.Struct
	36, // [36:36] is the sub-list for method output_type
	36, // [36:36] is the sub-list for method input_type
	36, // [36:36] is the sub-list for extension type_name
	36, // [36:36] is the sub-list for extension extendee
	0,  // [0:36] is the sub-list for field type_name
}

func init() { file_chaukas_spec_common_v1_events_proto_init() }
func file_chaukas_spec_common_v1_events_proto_init() {
	if File_chaukas_spec_common_v1_events_proto != nil {
		return
	}
	file_chaukas_spec_common_v1_events_proto_msgTypes[14].OneofWrappers = []any{
		(*Event_Message)(nil),
		(*Event_ToolCall)(nil),
		(*Event_ToolResponse)(nil),
		(*Event_LlmInvocation)(nil),
		(*Event_Policy)(nil),
		(*Event_DataAccess)(nil),
		(*Event_StateUpdate)(nil),
		(*Event_Error)(nil),
		(*Event_AgentHandoff)(nil),
		(*Event_McpCall)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chaukas_spec_common_v1_events_proto_rawDesc), len(file_chaukas_spec_common_v1_events_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chaukas_spec_common_v1_events_proto_goTypes,
		DependencyIndexes: file_chaukas_spec_common_v1_events_proto_depIdxs,
		EnumInfos:         file_chaukas_spec_common_v1_events_proto_enumTypes,
		MessageInfos:      file_chaukas_spec_common_v1_events_proto_msgTypes,
	}.Build()
	File_chaukas_spec_common_v1_events_proto = out.File
	file_chaukas_spec_common_v1_events_proto_goTypes = nil
	file_chaukas_spec_common_v1_events_proto_depIdxs = nil
}
